int func1(){

    int count;
    count = 1;
    count++;
    if(a lt 0){
        count++;
    }else{
    count = count*count;
    }
    
    return (dalle-1);
}

regex r{

    r1: ((y|u)*(g)?)+ {pass token1;};

    r2: (a+b*)? {pass token2;};
}

grammar g1{

    p1: A -> B{func1();}|C;
    p2: B -> token1;
    p3: C -> token2 {func1();};
}

int main(){

    file ab = open("ip.txt","r");
    parse(ab, r, g);

    return 0;
}
